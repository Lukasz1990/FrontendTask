{"version":3,"sources":["redux/actions/types.js","redux/reducers/defaultReducer.js","redux/reducers/index.js","store.js","images/background.jpg","redux/actions/userAPI.js","components/Home.js","index.js"],"names":["FETCH_APIS","initialState","data","combineReducers","defaultReducer","state","action","type","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","userAPI","useStyles","makeStyles","card","btn","display","marginLeft","marginRight","marginTop","width","borderRadius","padding","fontSize","cursor","fontFamily","textTransform","backgroundImage","Wallpaper","backgroundSize","backgroundRepeat","fontWeight","color","wrapper","connect","dispatch","useDispatch","useState","showUrl","changeShowUrl","classes","movieCharacters","useSelector","filteredCharackters","slice","console","log","useEffect","a","axios","response","fetchApis","className","root","Grid","container","justify","alignContent","spacing","map","item","md","Card","CardActionArea","CardMedia","media","image","title","CardContent","Chip","avatar","Avatar","label","name","clickable","Button","fullWidth","variant","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2275f7b6.chunk.js","sourcesContent":["export const FETCH_APIS = 'FETCH_APIS'\r\n","import { FETCH_APIS } from '../actions/types'\r\n\r\nconst initialState = {\r\n  data: [],\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_APIS:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport defaultReducer from './defaultReducer'\r\n\r\nexport default combineReducers({\r\n  defaultReducer: defaultReducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './redux/reducers/index'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","export default __webpack_public_path__ + \"static/media/background.954005f7.jpg\";","import { FETCH_APIS } from './types'\r\n\r\nexport const userAPI = (data) => {\r\n  return { type: FETCH_APIS, data: data }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch, connect } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Chip,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  makeStyles,\r\n} from '@material-ui/core'\r\nimport Wallpaper from '../images/background.jpg'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport axios from 'axios'\r\nimport { userAPI } from '../redux/actions/userAPI'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card: {},\r\n  btn: {\r\n    display: 'block',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    marginTop: '30px',\r\n    width: '200px',\r\n    borderRadius: '7px',\r\n    padding: '10px 50px',\r\n    fontSize: '11px',\r\n    cursor: 'pointer',\r\n    fontFamily: 'system-ui',\r\n    textTransform: 'inherit',\r\n    backgroundImage: `url(${Wallpaper})`,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    fontWeight: 600,\r\n    color: 'white',\r\n  },\r\n  wrapper: {\r\n    padding: '30px',\r\n  },\r\n}))\r\n\r\nconst Home = ({}) => {\r\n  const dispatch = useDispatch()\r\n  const [showUrl, changeShowUrl] = useState(\r\n    'https://breakingbadapi.com/api/episodes'\r\n  )\r\n  const classes = useStyles()\r\n  const movieCharacters = useSelector((state) => state.defaultReducer.data)\r\n  const filteredCharackters = movieCharacters.slice(0, 10)\r\n  console.log(movieCharacters, 'data')\r\n\r\n  useEffect(() => {\r\n    const fetchApis = async () => {\r\n      const response = await axios(showUrl)\r\n      const data = await response.data\r\n      dispatch(userAPI(data))\r\n    }\r\n    fetchApis()\r\n  }, [showUrl])\r\n\r\n  const onChangeHandler = () => {\r\n    changeShowUrl('https://breakingbadapi.com/api/episodes')\r\n    if (showUrl === 'https://breakingbadapi.com/api/episodes') {\r\n      changeShowUrl('https://breakingbadapi.com/api/characters')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        justify='center'\r\n        alignContent='center'\r\n        className={classes.wrapper}\r\n        spacing={3}\r\n      >\r\n        {movieCharacters ? (\r\n          filteredCharackters.map((item) => (\r\n            <Grid container item md={6} justify='center' alignContent='center'>\r\n              <Card className={classes.card}>\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    className={classes.media}\r\n                    image='/static/images/cards/contemplative-reptile.jpg'\r\n                    title='Contemplative Reptile'\r\n                  />\r\n                  <CardContent>\r\n                    <Chip\r\n                      avatar={<Avatar>M</Avatar>}\r\n                      label={item.name || item.title}\r\n                      clickable\r\n                      color='primary'\r\n                    />\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Card>\r\n            </Grid>\r\n          )) &&\r\n          filteredCharackters.map((item) => (\r\n            <Grid container item md={6} justify='center' alignContent='center'>\r\n              <Card className={classes.card}>\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    className={classes.media}\r\n                    image='/static/images/cards/contemplative-reptile.jpg'\r\n                    title='Contemplative Reptile'\r\n                  />\r\n                  <CardContent>\r\n                    <Chip\r\n                      avatar={<Avatar>BB</Avatar>}\r\n                      label={item.name || item.title}\r\n                      clickable\r\n                      color={item.name ? 'primary' : 'secondary'}\r\n                    />\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Card>\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <div>Loading...</div>\r\n        )}\r\n      </Grid>\r\n      <Button\r\n        fullWidth\r\n        className={classes.btn}\r\n        variant='contained'\r\n        onClick={onChangeHandler}\r\n      >\r\n        {showUrl === 'https://breakingbadapi.com/api/episodes'\r\n          ? 'Show charackters'\r\n          : 'Show episodes'}\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\nexport default connect(null)(Home)\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport Home from './components/Home'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Home />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}